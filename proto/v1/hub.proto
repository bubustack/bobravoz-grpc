/*
Copyright 2025 BubuStack.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

syntax = "proto3";

package proto.v1;

option go_package = "github.com/bubustack/bobravoz-grpc/proto/v1";

import "google/protobuf/struct.proto";

// DataPacket represents a unit of data being sent through the streaming pipeline.
message DataPacket {
  // Metadata contains information about the StoryRun and the specific step this packet relates to.
  map<string, string> metadata = 1;

  // Payload is the actual data being processed.
  google.protobuf.Struct payload = 2;

  // Inputs contains the evaluated step 'with:' configuration (CEL-resolved per packet).
  // This is analogous to BUBU_INPUTS in batch mode - dynamic configuration that can
  // reference outputs from previous steps. The Hub evaluates this before forwarding.
  google.protobuf.Struct inputs = 3;
}

message ProcessRequest {
  DataPacket packet = 1;
}

message ProcessResponse {
  DataPacket packet = 1;
}

service HubService {
  // Process is a bidirectional streaming RPC that allows the hub to process and forward data between engrams.
  rpc Process (stream ProcessRequest) returns (stream ProcessResponse);
}


